Nonterminals useless in grammar

   myquit


Terminals unused in grammar

   QUIT


Rules useless in grammar

   33 myquit: QUIT


Grammar

    0 $accept: input $end

    1 input: %empty
    2      | input line

    3 line: NEWLINE
    4     | exp NEWLINE
    5     | IDENTIFIER EQUALS exp NEWLINE
    6     | HELP
    7     | error

    8 exp: number
    9    | plusexp
   10    | minusexp
   11    | timesexp
   12    | divexp
   13    | modexp
   14    | negexp
   15    | powexp
   16    | parenexp
   17    | varexp
   18    | functioncall
   19    | constant

   20 number: NUMBER

   21 plusexp: exp PLUS exp

   22 minusexp: exp MINUS exp

   23 timesexp: exp TIMES exp

   24 divexp: exp DIVIDE exp

   25 modexp: exp MOD exp

   26 powexp: exp POW exp

   27 negexp: MINUS exp

   28 parenexp: LPAREN exp RPAREN

   29 varexp: IDENTIFIER

   30 functioncall: IDENTIFIER LPAREN exp RPAREN

   31 constant: PI
   32         | E


Terminals, with rules where they appear

$end (0) 0
error (256) 7
NUMBER (258) 20
PLUS (259) 21
MINUS (260) 22 27
TIMES (261) 23
DIVIDE (262) 24
MOD (263) 25
POW (264) 26
LPAREN (265) 28 30
RPAREN (266) 28 30
NEWLINE (267) 3 4 5
QUIT (268)
EQUALS (269) 5
PI (270) 31
E (271) 32
IDENTIFIER (272) 5 29 30
HELP (273) 6
NEG (274)


Nonterminals, with rules where they appear

$accept (20)
    on left: 0
input (21)
    on left: 1 2, on right: 0 2
line (22)
    on left: 3 4 5 6 7, on right: 2
exp (23)
    on left: 8 9 10 11 12 13 14 15 16 17 18 19, on right: 4 5 21 22
    23 24 25 26 27 28 30
number (24)
    on left: 20, on right: 8
plusexp (25)
    on left: 21, on right: 9
minusexp (26)
    on left: 22, on right: 10
timesexp (27)
    on left: 23, on right: 11
divexp (28)
    on left: 24, on right: 12
modexp (29)
    on left: 25, on right: 13
powexp (30)
    on left: 26, on right: 15
negexp (31)
    on left: 27, on right: 14
parenexp (32)
    on left: 28, on right: 16
varexp (33)
    on left: 29, on right: 17
functioncall (34)
    on left: 30, on right: 18
constant (35)
    on left: 31 32, on right: 19


State 0

    0 $accept: . input $end

    $default  reduce using rule 1 (input)

    input  go to state 1


State 1

    0 $accept: input . $end
    2 input: input . line

    $end        shift, and go to state 2
    error       shift, and go to state 3
    NUMBER      shift, and go to state 4
    MINUS       shift, and go to state 5
    LPAREN      shift, and go to state 6
    NEWLINE     shift, and go to state 7
    PI          shift, and go to state 8
    E           shift, and go to state 9
    IDENTIFIER  shift, and go to state 10
    HELP        shift, and go to state 11

    line          go to state 12
    exp           go to state 13
    number        go to state 14
    plusexp       go to state 15
    minusexp      go to state 16
    timesexp      go to state 17
    divexp        go to state 18
    modexp        go to state 19
    powexp        go to state 20
    negexp        go to state 21
    parenexp      go to state 22
    varexp        go to state 23
    functioncall  go to state 24
    constant      go to state 25


State 2

    0 $accept: input $end .

    $default  accept


State 3

    7 line: error .

    $default  reduce using rule 7 (line)


State 4

   20 number: NUMBER .

    $default  reduce using rule 20 (number)


State 5

   27 negexp: MINUS . exp

    NUMBER      shift, and go to state 4
    MINUS       shift, and go to state 5
    LPAREN      shift, and go to state 6
    PI          shift, and go to state 8
    E           shift, and go to state 9
    IDENTIFIER  shift, and go to state 26

    exp           go to state 27
    number        go to state 14
    plusexp       go to state 15
    minusexp      go to state 16
    timesexp      go to state 17
    divexp        go to state 18
    modexp        go to state 19
    powexp        go to state 20
    negexp        go to state 21
    parenexp      go to state 22
    varexp        go to state 23
    functioncall  go to state 24
    constant      go to state 25


State 6

   28 parenexp: LPAREN . exp RPAREN

    NUMBER      shift, and go to state 4
    MINUS       shift, and go to state 5
    LPAREN      shift, and go to state 6
    PI          shift, and go to state 8
    E           shift, and go to state 9
    IDENTIFIER  shift, and go to state 26

    exp           go to state 28
    number        go to state 14
    plusexp       go to state 15
    minusexp      go to state 16
    timesexp      go to state 17
    divexp        go to state 18
    modexp        go to state 19
    powexp        go to state 20
    negexp        go to state 21
    parenexp      go to state 22
    varexp        go to state 23
    functioncall  go to state 24
    constant      go to state 25


State 7

    3 line: NEWLINE .

    $default  reduce using rule 3 (line)


State 8

   31 constant: PI .

    $default  reduce using rule 31 (constant)


State 9

   32 constant: E .

    $default  reduce using rule 32 (constant)


State 10

    5 line: IDENTIFIER . EQUALS exp NEWLINE
   29 varexp: IDENTIFIER .
   30 functioncall: IDENTIFIER . LPAREN exp RPAREN

    LPAREN  shift, and go to state 29
    EQUALS  shift, and go to state 30

    $default  reduce using rule 29 (varexp)


State 11

    6 line: HELP .

    $default  reduce using rule 6 (line)


State 12

    2 input: input line .

    $default  reduce using rule 2 (input)


State 13

    4 line: exp . NEWLINE
   21 plusexp: exp . PLUS exp
   22 minusexp: exp . MINUS exp
   23 timesexp: exp . TIMES exp
   24 divexp: exp . DIVIDE exp
   25 modexp: exp . MOD exp
   26 powexp: exp . POW exp

    PLUS     shift, and go to state 31
    MINUS    shift, and go to state 32
    TIMES    shift, and go to state 33
    DIVIDE   shift, and go to state 34
    MOD      shift, and go to state 35
    POW      shift, and go to state 36
    NEWLINE  shift, and go to state 37


State 14

    8 exp: number .

    $default  reduce using rule 8 (exp)


State 15

    9 exp: plusexp .

    $default  reduce using rule 9 (exp)


State 16

   10 exp: minusexp .

    $default  reduce using rule 10 (exp)


State 17

   11 exp: timesexp .

    $default  reduce using rule 11 (exp)


State 18

   12 exp: divexp .

    $default  reduce using rule 12 (exp)


State 19

   13 exp: modexp .

    $default  reduce using rule 13 (exp)


State 20

   15 exp: powexp .

    $default  reduce using rule 15 (exp)


State 21

   14 exp: negexp .

    $default  reduce using rule 14 (exp)


State 22

   16 exp: parenexp .

    $default  reduce using rule 16 (exp)


State 23

   17 exp: varexp .

    $default  reduce using rule 17 (exp)


State 24

   18 exp: functioncall .

    $default  reduce using rule 18 (exp)


State 25

   19 exp: constant .

    $default  reduce using rule 19 (exp)


State 26

   29 varexp: IDENTIFIER .
   30 functioncall: IDENTIFIER . LPAREN exp RPAREN

    LPAREN  shift, and go to state 29

    $default  reduce using rule 29 (varexp)


State 27

   21 plusexp: exp . PLUS exp
   22 minusexp: exp . MINUS exp
   23 timesexp: exp . TIMES exp
   24 divexp: exp . DIVIDE exp
   25 modexp: exp . MOD exp
   26 powexp: exp . POW exp
   27 negexp: MINUS exp .

    POW  shift, and go to state 36

    $default  reduce using rule 27 (negexp)


State 28

   21 plusexp: exp . PLUS exp
   22 minusexp: exp . MINUS exp
   23 timesexp: exp . TIMES exp
   24 divexp: exp . DIVIDE exp
   25 modexp: exp . MOD exp
   26 powexp: exp . POW exp
   28 parenexp: LPAREN exp . RPAREN

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    MOD     shift, and go to state 35
    POW     shift, and go to state 36
    RPAREN  shift, and go to state 38


State 29

   30 functioncall: IDENTIFIER LPAREN . exp RPAREN

    NUMBER      shift, and go to state 4
    MINUS       shift, and go to state 5
    LPAREN      shift, and go to state 6
    PI          shift, and go to state 8
    E           shift, and go to state 9
    IDENTIFIER  shift, and go to state 26

    exp           go to state 39
    number        go to state 14
    plusexp       go to state 15
    minusexp      go to state 16
    timesexp      go to state 17
    divexp        go to state 18
    modexp        go to state 19
    powexp        go to state 20
    negexp        go to state 21
    parenexp      go to state 22
    varexp        go to state 23
    functioncall  go to state 24
    constant      go to state 25


State 30

    5 line: IDENTIFIER EQUALS . exp NEWLINE

    NUMBER      shift, and go to state 4
    MINUS       shift, and go to state 5
    LPAREN      shift, and go to state 6
    PI          shift, and go to state 8
    E           shift, and go to state 9
    IDENTIFIER  shift, and go to state 26

    exp           go to state 40
    number        go to state 14
    plusexp       go to state 15
    minusexp      go to state 16
    timesexp      go to state 17
    divexp        go to state 18
    modexp        go to state 19
    powexp        go to state 20
    negexp        go to state 21
    parenexp      go to state 22
    varexp        go to state 23
    functioncall  go to state 24
    constant      go to state 25


State 31

   21 plusexp: exp PLUS . exp

    NUMBER      shift, and go to state 4
    MINUS       shift, and go to state 5
    LPAREN      shift, and go to state 6
    PI          shift, and go to state 8
    E           shift, and go to state 9
    IDENTIFIER  shift, and go to state 26

    exp           go to state 41
    number        go to state 14
    plusexp       go to state 15
    minusexp      go to state 16
    timesexp      go to state 17
    divexp        go to state 18
    modexp        go to state 19
    powexp        go to state 20
    negexp        go to state 21
    parenexp      go to state 22
    varexp        go to state 23
    functioncall  go to state 24
    constant      go to state 25


State 32

   22 minusexp: exp MINUS . exp

    NUMBER      shift, and go to state 4
    MINUS       shift, and go to state 5
    LPAREN      shift, and go to state 6
    PI          shift, and go to state 8
    E           shift, and go to state 9
    IDENTIFIER  shift, and go to state 26

    exp           go to state 42
    number        go to state 14
    plusexp       go to state 15
    minusexp      go to state 16
    timesexp      go to state 17
    divexp        go to state 18
    modexp        go to state 19
    powexp        go to state 20
    negexp        go to state 21
    parenexp      go to state 22
    varexp        go to state 23
    functioncall  go to state 24
    constant      go to state 25


State 33

   23 timesexp: exp TIMES . exp

    NUMBER      shift, and go to state 4
    MINUS       shift, and go to state 5
    LPAREN      shift, and go to state 6
    PI          shift, and go to state 8
    E           shift, and go to state 9
    IDENTIFIER  shift, and go to state 26

    exp           go to state 43
    number        go to state 14
    plusexp       go to state 15
    minusexp      go to state 16
    timesexp      go to state 17
    divexp        go to state 18
    modexp        go to state 19
    powexp        go to state 20
    negexp        go to state 21
    parenexp      go to state 22
    varexp        go to state 23
    functioncall  go to state 24
    constant      go to state 25


State 34

   24 divexp: exp DIVIDE . exp

    NUMBER      shift, and go to state 4
    MINUS       shift, and go to state 5
    LPAREN      shift, and go to state 6
    PI          shift, and go to state 8
    E           shift, and go to state 9
    IDENTIFIER  shift, and go to state 26

    exp           go to state 44
    number        go to state 14
    plusexp       go to state 15
    minusexp      go to state 16
    timesexp      go to state 17
    divexp        go to state 18
    modexp        go to state 19
    powexp        go to state 20
    negexp        go to state 21
    parenexp      go to state 22
    varexp        go to state 23
    functioncall  go to state 24
    constant      go to state 25


State 35

   25 modexp: exp MOD . exp

    NUMBER      shift, and go to state 4
    MINUS       shift, and go to state 5
    LPAREN      shift, and go to state 6
    PI          shift, and go to state 8
    E           shift, and go to state 9
    IDENTIFIER  shift, and go to state 26

    exp           go to state 45
    number        go to state 14
    plusexp       go to state 15
    minusexp      go to state 16
    timesexp      go to state 17
    divexp        go to state 18
    modexp        go to state 19
    powexp        go to state 20
    negexp        go to state 21
    parenexp      go to state 22
    varexp        go to state 23
    functioncall  go to state 24
    constant      go to state 25


State 36

   26 powexp: exp POW . exp

    NUMBER      shift, and go to state 4
    MINUS       shift, and go to state 5
    LPAREN      shift, and go to state 6
    PI          shift, and go to state 8
    E           shift, and go to state 9
    IDENTIFIER  shift, and go to state 26

    exp           go to state 46
    number        go to state 14
    plusexp       go to state 15
    minusexp      go to state 16
    timesexp      go to state 17
    divexp        go to state 18
    modexp        go to state 19
    powexp        go to state 20
    negexp        go to state 21
    parenexp      go to state 22
    varexp        go to state 23
    functioncall  go to state 24
    constant      go to state 25


State 37

    4 line: exp NEWLINE .

    $default  reduce using rule 4 (line)


State 38

   28 parenexp: LPAREN exp RPAREN .

    $default  reduce using rule 28 (parenexp)


State 39

   21 plusexp: exp . PLUS exp
   22 minusexp: exp . MINUS exp
   23 timesexp: exp . TIMES exp
   24 divexp: exp . DIVIDE exp
   25 modexp: exp . MOD exp
   26 powexp: exp . POW exp
   30 functioncall: IDENTIFIER LPAREN exp . RPAREN

    PLUS    shift, and go to state 31
    MINUS   shift, and go to state 32
    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    MOD     shift, and go to state 35
    POW     shift, and go to state 36
    RPAREN  shift, and go to state 47


State 40

    5 line: IDENTIFIER EQUALS exp . NEWLINE
   21 plusexp: exp . PLUS exp
   22 minusexp: exp . MINUS exp
   23 timesexp: exp . TIMES exp
   24 divexp: exp . DIVIDE exp
   25 modexp: exp . MOD exp
   26 powexp: exp . POW exp

    PLUS     shift, and go to state 31
    MINUS    shift, and go to state 32
    TIMES    shift, and go to state 33
    DIVIDE   shift, and go to state 34
    MOD      shift, and go to state 35
    POW      shift, and go to state 36
    NEWLINE  shift, and go to state 48


State 41

   21 plusexp: exp . PLUS exp
   21        | exp PLUS exp .
   22 minusexp: exp . MINUS exp
   23 timesexp: exp . TIMES exp
   24 divexp: exp . DIVIDE exp
   25 modexp: exp . MOD exp
   26 powexp: exp . POW exp

    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    MOD     shift, and go to state 35
    POW     shift, and go to state 36

    $default  reduce using rule 21 (plusexp)


State 42

   21 plusexp: exp . PLUS exp
   22 minusexp: exp . MINUS exp
   22         | exp MINUS exp .
   23 timesexp: exp . TIMES exp
   24 divexp: exp . DIVIDE exp
   25 modexp: exp . MOD exp
   26 powexp: exp . POW exp

    TIMES   shift, and go to state 33
    DIVIDE  shift, and go to state 34
    MOD     shift, and go to state 35
    POW     shift, and go to state 36

    $default  reduce using rule 22 (minusexp)


State 43

   21 plusexp: exp . PLUS exp
   22 minusexp: exp . MINUS exp
   23 timesexp: exp . TIMES exp
   23         | exp TIMES exp .
   24 divexp: exp . DIVIDE exp
   25 modexp: exp . MOD exp
   26 powexp: exp . POW exp

    POW  shift, and go to state 36

    $default  reduce using rule 23 (timesexp)


State 44

   21 plusexp: exp . PLUS exp
   22 minusexp: exp . MINUS exp
   23 timesexp: exp . TIMES exp
   24 divexp: exp . DIVIDE exp
   24       | exp DIVIDE exp .
   25 modexp: exp . MOD exp
   26 powexp: exp . POW exp

    POW  shift, and go to state 36

    $default  reduce using rule 24 (divexp)


State 45

   21 plusexp: exp . PLUS exp
   22 minusexp: exp . MINUS exp
   23 timesexp: exp . TIMES exp
   24 divexp: exp . DIVIDE exp
   25 modexp: exp . MOD exp
   25       | exp MOD exp .
   26 powexp: exp . POW exp

    POW  shift, and go to state 36

    $default  reduce using rule 25 (modexp)


State 46

   21 plusexp: exp . PLUS exp
   22 minusexp: exp . MINUS exp
   23 timesexp: exp . TIMES exp
   24 divexp: exp . DIVIDE exp
   25 modexp: exp . MOD exp
   26 powexp: exp . POW exp
   26       | exp POW exp .

    POW  shift, and go to state 36

    $default  reduce using rule 26 (powexp)


State 47

   30 functioncall: IDENTIFIER LPAREN exp RPAREN .

    $default  reduce using rule 30 (functioncall)


State 48

    5 line: IDENTIFIER EQUALS exp NEWLINE .

    $default  reduce using rule 5 (line)
